biweekly-contest-80

class Solution {
public:
    bool strongPasswordCheckerII(string p) {
       
        if(size(p) < 8) return false;
        
        
        bool low = false , upper = false ,digit = false ,special = false;
        
        
        for(auto c : p){
            if(c>='a' and c<='z') low = true;
            else if(c>='A' and c <='Z') upper = true;
            else if(isdigit(c))  digit = true;
            else special = true;
        }
        //Check the 6th condition
        
        for(int i=0;i+1<size(p);i++)  if(p[i] == p[i+1])    return false;
        
        
        if(low and upper and digit and special) return true;
        
        return false;
    }
};

class Solution {
public:
    long long countSubarrays(vector<int>& nums, long long k) {
        long long res=0,curr=0;
        int i=0,j=0;
        int n=nums.size();
        for(j=0;j<n;j++)
        {
            curr+=nums[j];
            while(curr*(j-i+1)>=k)
                curr-=nums[i--];
            
            res+=(j-i+1);
        }
        
        
    }
};

class Solution {
public:
    vector<int> successfulPairs(vector<int>& spells, vector<int>& potions, long long success) {
        
        
        sort(potions);
        
        long long need=0;
        ans list;
        
        for(int spell:spells){
            need=(sucess/spell);
            int val=n- lb(portion.b,potion.end,need)
                ans.push(val);
        }
        
        
    }
};

    
    
