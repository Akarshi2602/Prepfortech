def camel(s):
    x=0
    for x in range(0,n):
        if x==0:
            s.lower()
            continue
        if s[x-1]>=32 and s[x-1]<=47:
            s[x].upper()
            s.remove(x-1)
            x-=1
            
            
        else:
            s[x].lower()
            
        return s



def CamelCase(strParam): 
    strcopy=strparam[0].lower()
  strPam=strParam.lower()
  while not(ord('a') <= ord(strPam[0]) <= ord('z')):
    strPam=strPam[1:]

  newStr=""
  for i in range(len(strPam)):
    if ord('a') <= ord(strPam[i]) <= ord('z') and  not (ord('a') <= ord(strPam[i-1]) <= ord('z')):
      newStr+=strPam[i].upper()
    elif ord('a') <= ord(strPam[i]) <= ord('z'):
      newStr+=strPam[i]
  return strcopy+newStr

# keep this function call here 
print(CamelCase(input()))
Bob-loves
bob-loves


def StringChallenge(strParam):  left = 0
  right=len(strParam)-1
  pal=""
  c=0
  while left<=right:
    if strParam[left]==strParam[right]:
      left+=1
      right-=1
    else:
      if strParam[right]==strParam[left+1]:
        c+=1
        pal+=strParam[left]
        left+=1
      elif strParam[right]==strParam[left+2]:
        c+=2
        pal+=strParam[left]+strParam[left+1]
        left+=2
      elif strParam[left]==strParam[right-1]:
        c+=1
        pal+=strParam[right]
        right-=1
      elif strParam[left]==strParam[right-2]:
        c+=2

        pal+=strParam[right-1]+strParam[right]
        right-=2
      else:
        c+=2
        pal+=strParam[left]+strParam[right]
        left+=1
        right-=1
    
    l=(len(strParam)-len(pal))
  
    if c>2 or l<3:
      return "not possible"
  if c==0:
    return "palindrome"
  return pal



  # code goes here
  

# keep this function call here 
print(StringChallenge(input()))
