class Solution {
public:
    
 bool check(vector<int>& candies,long long mid, long long k)
    {
        int n=candies.size();
        long long int c=0;
        for(int i=0;i<n;i++)
        {
            c+=(candies[i]/mid);
            if(c>=k) return true;
        }
         return false;
    }
    int maximumCandies(vector<int>& candies, long long k) {
      long long  int l=1;
        long long int h=*max_element(candies.begin(),candies.end());
      long long   int ans=0;
        while(l<=h)
        {
         long long   int m=(l+(h-l)/2);
            if(check(candies,m,k))
            {
                ans=m;
                l=m+1;
            }
            else h=m-1;
        }
        return ans;
    }
};
https://leetcode.com/problems/maximum-candies-allocated-to-k-children/
