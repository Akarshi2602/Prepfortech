/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isSymmetric(TreeNode* root) {
        if(root==null) return 0;
        
        return ishelper(root->left,root->right);
    }
    bool is helper(TreeNode *a,Tree *b)
    {
        if(a==null && b==null) return true;
        
        if(a==null || b==null) return false;
        
        else if(a->val !=b->val)  return false;
        
        return ishelper(a->left,b->left) && ishelper(a->right,b->right);
    }
};
