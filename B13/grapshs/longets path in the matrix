class Solution:
    def longestIncreasingPath(self, matrix: List[List[int]]) -> int:
        m,n=len(matrix),len(matrix[0])
        
        def dfs(i,j,prev):
            if i<0 or j<0 or i>=m or i>=n or matrix[i][j]<=prev:
                return 0
            
                left=dfs(i,j-1,matrix[i][j])
                right=dfs(i,j+1,matrix[i][j])
                top=dfs(i-1,j,matrix[i][j])
                bottom=dfs(i+1,j,matrix[i][j])
            
            return max(top,bottom,left,right)+1
        
    ans=-1
    for i in range(m):
        for j in range(n):
            ans =max(ans,dfs(i,j,-1))
    return ans
        
