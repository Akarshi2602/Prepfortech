class Solution {
public:
    int findCenter(vector<vector<int>>& edges) {
        int n=edges.size();
        vector<int> indeg(n+1,0),outdeg(n+1,0);
        for(int i=0;i<n;i++)
        {
            int v1=edges[i][0];
            int v2=edges[i][1];
            outdeg[v1]++;
            outdeg[v2]++;
            indeg[v1]++;
            indeg[v2]++;
        }
        for(int i=1;i<=n;i++)
        {
            if(indeg[i]== n-1  && outdeg[i]==n-1) return i;
        }
        return-1;
        
    }
};

class Solution:
    def findCenter(self, edges: List[List[int]]) -> int:
        if not edges or not edges[0]:
            return 1
        deg=collections.defaultdict(int)
        
        for a,b in edges:
            deg[a]+=1
            deg[b]+=1
            
        total=len(deg)
        
        for key,val in deg.items():
            if val==total-1:
                return key
        return -1    
