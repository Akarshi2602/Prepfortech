/*
// Definition for a Node.
class Node {
    public int val;
    public List<Node> children;

    public Node() {}

    public Node(int _val) {
        val = _val;
    }

    public Node(int _val, List<Node> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
    public List<Integer> preorder(Node root) {
        List<Integer> ans= new ArrayList<>();
        helper(root,ans);
        return ans;
        
    }
    private void helper(Node root, List<Integer> ans)
    {
        if (root==null) return;
        ans.add(root.val);
        for(Node child:root.children)
        {
            helper(child,ans);
        }
        return ;
    }
}



/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
public:
     void  helper(TreeNode* root,vector<int> &ans)
    {
        if(root==NULL) return ;
        
        ans.push_back(root->val);
         
         for(Node* child:root -> _children)
         {
                helper(child,ans);
         }
        return; 
        
    }
    vector<int> preorder(Node* root) {
         vector<int> ans;
        helper(root,ans);
        return ans;
    }
};
