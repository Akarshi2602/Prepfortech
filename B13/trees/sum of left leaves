class Solution {
public:
    void helper(TreeNode* root,int &sum){
        if(!root) return;
        
        if(root->left && !root->left->left && !root->left->right) sum+=root->left->val;
        
        helper(root->left,sum);
        helper(root->right,sum);
        
        return;
    }
    int sumOfLeftLeaves(TreeNode* root) {
        int sum=0;
        helper(root, sum);
        return sum;
    }
};

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def sumOfLeftLeaves(self, root: Optional[TreeNode]) -> int:
        if not root:
            return 0
        if root.left and not root.left.left and not root.left.right:
            return root.left.val+self.sumOfLeftLeaves(root.right)
        return self.sumOfLeftLeaves(root.left)+ self.sumOfLeftLeaves(root.right)
        
        
